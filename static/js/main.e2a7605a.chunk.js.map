{"version":3,"sources":["components/NewTodo/NewTodo.js","constants/proptypes.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["NewTodo","PropTypes","func","isRequired","arrayOf","shape","title","string","isCompleted","bool","state","inputValue","handleSubmit","event","preventDefault","_this","onAdd","props","setState","handleInputChange","value","target","this","react_default","a","createElement","onSubmit","type","className","placeholder","onChange","React","Component","TodoList","_ref","todos","toggleTodoCompleteness","removeTodo","map","todo","key","id","checked","onClick","TodosFilter","filterIdentifier","toggleFilterIdentifier","removeCompletedTodos","Fragment","href","filter","length","style","display","App","originalTodos","idCounter","handleAddTodo","prevState","concat","Object","toConsumableArray","toggleAllTodosCompleted","_objectSpread","some","t","filterTodos","identifier","_this$state","amountOfActiveTodos","components_NewTodo_NewTodo","htmlFor","components_TodoList_TodoList","components_TodosFilter_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e2a7605a.chunk.js","sourcesContent":["import React from 'react';\nimport { NewTodoPropTypes } from '../../constants/proptypes';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { inputValue } = this.state;\n    const { onAdd } = this.props;\n\n    if (inputValue) {\n      onAdd(inputValue);\n\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={inputValue}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nNewTodo.propTypes = NewTodoPropTypes;\n\nexport default NewTodo;\n","import PropTypes from 'prop-types';\n\nexport const NewTodoPropTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n\nexport const TodoListPropTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      isCompleted: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  toggleTodoCompleteness: PropTypes.func.isRequired,\n  removeTodo: PropTypes.func.isRequired,\n};\n\nexport const TodosFilterPropTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      isCompleted: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  filterIdentifier: PropTypes.string.isRequired,\n  toggleFilterIdentifier: PropTypes.func.isRequired,\n  removeCompletedTodos: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { TodoListPropTypes } from '../../constants/proptypes';\n\nconst TodoList = ({\n  todos,\n  toggleTodoCompleteness,\n  removeTodo,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li className={todo.isCompleted ? 'completed' : ''} key={todo.id}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.isCompleted}\n            onChange={() => toggleTodoCompleteness(todo.id)}\n          />\n          <label className=\"todo\">{todo.title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(todo.id)}\n          />\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = TodoListPropTypes;\n\nexport default TodoList;\n","import React from 'react';\nimport { TodosFilterPropTypes } from '../../constants/proptypes';\n\nconst TodosFilter = ({\n  todos,\n  filterIdentifier,\n  toggleFilterIdentifier,\n  removeCompletedTodos,\n}) => (\n  <>\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filterIdentifier === 'all' ? 'selected' : ''}\n          onClick={() => toggleFilterIdentifier('all')}\n        >\n          All\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/active\"\n          className={filterIdentifier === 'active' ? 'selected' : ''}\n          onClick={() => toggleFilterIdentifier('active')}\n        >\n          Active\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filterIdentifier === 'completed' ? 'selected' : ''}\n          onClick={() => toggleFilterIdentifier('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n    {todos.filter(todo => todo.isCompleted).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={removeCompletedTodos}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nTodosFilter.propTypes = TodosFilterPropTypes;\n\nexport default TodosFilter;\n","import React from 'react';\nimport NewTodo from './components/NewTodo/NewTodo';\nimport TodoList from './components/TodoList/TodoList';\nimport TodosFilter from './components/TodosFilter/TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    idCounter: 0,\n    filterIdentifier: 'all',\n  };\n\n  handleAddTodo = (title) => {\n    this.setState(prevState => ({\n      todos: [\n        {\n          id: prevState.idCounter + 1,\n          title,\n          isCompleted: false,\n        },\n        ...prevState.todos,\n      ],\n      originalTodos: [\n        {\n          id: prevState.idCounter + 1,\n          title,\n          isCompleted: false,\n        },\n        ...prevState.todos,\n      ],\n      idCounter: prevState.idCounter + 1,\n    }));\n  };\n\n  toggleAllTodosCompleted = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].map(todo => ({\n        ...todo,\n        isCompleted: prevState.todos.some(t => !t.isCompleted),\n      })),\n      originalTodos: [...prevState.originalTodos].map(todo => ({\n        ...todo,\n        isCompleted: prevState.originalTodos.some(t => !t.isCompleted),\n      })),\n    }));\n  };\n\n  toggleTodoCompleteness = (id) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            isCompleted: !todo.isCompleted,\n          };\n        }\n\n        return todo;\n      }),\n      originalTodos: [...prevState.originalTodos].map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            isCompleted: !todo.isCompleted,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n\n    this.filterTodos();\n  };\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => todo.id !== id),\n      originalTodos: [...prevState.originalTodos]\n        .filter(todo => todo.id !== id),\n    }));\n  };\n\n  toggleFilterIdentifier = (identifier) => {\n    this.setState({\n      filterIdentifier: identifier,\n    });\n    this.filterTodos();\n  };\n\n  filterTodos = () => {\n    this.setState((prevState) => {\n      const { filterIdentifier, originalTodos } = prevState;\n\n      if (filterIdentifier === 'active') {\n        return ({\n          todos: [...originalTodos].filter(todo => !todo.isCompleted),\n        });\n      }\n\n      if (filterIdentifier === 'completed') {\n        return ({\n          todos: [...originalTodos].filter(todo => todo.isCompleted),\n        });\n      }\n\n      return ({\n        todos: [...originalTodos],\n      });\n    });\n  };\n\n  removeCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => !todo.isCompleted),\n      originalTodos: [...prevState.originalTodos]\n        .filter(todo => !todo.isCompleted),\n    }));\n  };\n\n  render() {\n    const { todos, originalTodos, filterIdentifier } = this.state;\n    const amountOfActiveTodos = originalTodos\n      .filter(todo => !todo.isCompleted).length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo onAdd={this.handleAddTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.toggleAllTodosCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={todos}\n            toggleTodoCompleteness={this.toggleTodoCompleteness}\n            removeTodo={this.removeTodo}\n          />\n        </section>\n\n        {(originalTodos.length > 0) && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <span className=\"todo-count\">\n              {amountOfActiveTodos}\n              {' '}\n              {amountOfActiveTodos === 1\n                ? 'item left'\n                : 'items left'\n              }\n            </span>\n            <TodosFilter\n              todos={todos}\n              filterIdentifier={filterIdentifier}\n              toggleFilterIdentifier={this.toggleFilterIdentifier}\n              removeCompletedTodos={this.removeCompletedTodos}\n            />\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}