{"version":3,"sources":["components/NewTodo/NewTodo.js","components/TodoList/TodoList.js","components/TodosFilter/TodosFilter.js","App.js","index.js"],"names":["NewTodo","state","inputValue","handleSubmit","event","preventDefault","_this","onAdd","props","setState","handleInputChange","value","target","this","react_default","a","createElement","onSubmit","type","className","placeholder","onChange","React","Component","TodoList","_ref","todos","toggleTodoCompleteness","removeTodo","map","todo","completed","key","id","checked","title","onClick","TodosFilter","filterIdentifier","toggleFilterIdentifier","removeCompletedTodos","Fragment","href","filter","length","style","display","App","originalTodos","idCounter","handleAddTodo","prevState","concat","Object","toConsumableArray","toggleAllTodosCompleted","_objectSpread","some","t","filterTodos","identifier","_this$state","amountOfActiveTodos","components_NewTodo_NewTodo","htmlFor","components_TodoList_TodoList","components_TodosFilter_TodosFilter","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dec33da3.chunk.js","sourcesContent":["import React from 'react';\n\nclass NewTodo extends React.Component {\n  state = {\n    inputValue: '',\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { inputValue } = this.state;\n    const { onAdd } = this.props;\n\n    if (inputValue) {\n      onAdd(inputValue);\n\n      this.setState({\n        inputValue: '',\n      });\n    }\n  };\n\n  handleInputChange = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      inputValue: value,\n    });\n  };\n\n  render() {\n    const { inputValue } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={inputValue}\n          onChange={this.handleInputChange}\n        />\n      </form>\n    );\n  }\n}\n\nexport default NewTodo;\n","import React from 'react';\n\nconst TodoList = ({\n  todos,\n  toggleTodoCompleteness,\n  removeTodo,\n}) => (\n  <ul className=\"todo-list\">\n    {todos.map(todo => (\n      <li className={todo.completed ? 'completed' : ''} key={todo.id}>\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            checked={todo.completed}\n            onChange={() => toggleTodoCompleteness(todo.id)}\n          />\n          <label className=\"todo\">{todo.title}</label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            onClick={() => removeTodo(todo.id)}\n          />\n        </div>\n      </li>\n    ))}\n  </ul>\n);\n\nexport default TodoList;\n","import React from 'react';\n\nconst TodosFilter = ({\n  todos,\n  filterIdentifier,\n  toggleFilterIdentifier,\n  removeCompletedTodos,\n}) => (\n  <>\n    <ul className=\"filters\">\n      <li>\n        <a\n          href=\"#/\"\n          className={filterIdentifier === 'all' ? 'selected' : ''}\n          onClick={() => toggleFilterIdentifier('all')}\n        >\n          All\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/active\"\n          className={filterIdentifier === 'active' ? 'selected' : ''}\n          onClick={() => toggleFilterIdentifier('active')}\n        >\n          Active\n        </a>\n      </li>\n      <li>\n        <a\n          href=\"#/completed\"\n          className={filterIdentifier === 'completed' ? 'selected' : ''}\n          onClick={() => toggleFilterIdentifier('completed')}\n        >\n          Completed\n        </a>\n      </li>\n    </ul>\n    {todos.filter(todo => todo.completed).length > 0 && (\n      <button\n        type=\"button\"\n        className=\"clear-completed\"\n        style={{ display: 'block' }}\n        onClick={removeCompletedTodos}\n      >\n        Clear completed\n      </button>\n    )}\n  </>\n);\n\nexport default TodosFilter;\n","import React from 'react';\nimport NewTodo from './components/NewTodo/NewTodo';\nimport TodoList from './components/TodoList/TodoList';\nimport TodosFilter from './components/TodosFilter/TodosFilter';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    originalTodos: [],\n    idCounter: 0,\n    filterIdentifier: 'all',\n  };\n\n  handleAddTodo = (title) => {\n    this.setState(prevState => ({\n      todos: [\n        {\n          id: prevState.idCounter + 1,\n          title,\n          completed: false,\n        },\n        ...prevState.todos,\n      ],\n      originalTodos: [\n        {\n          id: prevState.idCounter + 1,\n          title,\n          completed: false,\n        },\n        ...prevState.todos,\n      ],\n      idCounter: prevState.idCounter + 1,\n    }));\n  };\n\n  toggleAllTodosCompleted = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].map(todo => ({\n        ...todo,\n        completed: prevState.todos.some(t => !t.completed),\n      })),\n      originalTodos: [...prevState.originalTodos].map(todo => ({\n        ...todo,\n        completed: prevState.originalTodos.some(t => !t.completed),\n      })),\n    }));\n  };\n\n  toggleTodoCompleteness = (id) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n      originalTodos: [...prevState.originalTodos].map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n\n        return todo;\n      }),\n    }));\n\n    this.filterTodos();\n  };\n\n  removeTodo = (id) => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => todo.id !== id),\n      originalTodos: [...prevState.originalTodos]\n        .filter(todo => todo.id !== id),\n    }));\n  };\n\n  toggleFilterIdentifier = (identifier) => {\n    this.setState({\n      filterIdentifier: identifier,\n    });\n    this.filterTodos();\n  };\n\n  filterTodos = () => {\n    this.setState((prevState) => {\n      const { filterIdentifier, originalTodos } = prevState;\n\n      if (filterIdentifier === 'all') {\n        return ({\n          todos: [...originalTodos],\n        });\n      }\n\n      if (filterIdentifier === 'active') {\n        return ({\n          todos: [...originalTodos].filter(todo => !todo.completed),\n        });\n      }\n\n      if (filterIdentifier === 'completed') {\n        return ({\n          todos: [...originalTodos].filter(todo => todo.completed),\n        });\n      }\n    });\n  };\n\n  removeCompletedTodos = () => {\n    this.setState(prevState => ({\n      todos: [...prevState.todos].filter(todo => !todo.completed),\n      originalTodos: [...prevState.originalTodos]\n        .filter(todo => !todo.completed),\n    }));\n  };\n\n  render() {\n    const { todos, originalTodos, filterIdentifier } = this.state;\n    const amountOfActiveTodos = originalTodos\n      .filter(todo => !todo.completed).length;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <NewTodo onAdd={this.handleAddTodo} />\n        </header>\n\n        <section className=\"main\" style={{ display: 'block' }}>\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onClick={this.toggleAllTodosCompleted}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <TodoList\n            todos={todos}\n            toggleTodoCompleteness={this.toggleTodoCompleteness}\n            removeTodo={this.removeTodo}\n          />\n        </section>\n\n        {(originalTodos.length > 0) && (\n          <footer className=\"footer\" style={{ display: 'block' }}>\n            <span className=\"todo-count\">\n              {amountOfActiveTodos}\n              {' '}\n              {amountOfActiveTodos === 1\n                ? 'item left'\n                : 'items left'\n              }\n            </span>\n            <TodosFilter\n              todos={todos}\n              filterIdentifier={filterIdentifier}\n              toggleFilterIdentifier={this.toggleFilterIdentifier}\n              removeCompletedTodos={this.removeCompletedTodos}\n            />\n          </footer>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}